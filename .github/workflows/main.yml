name: CI

on:
  push:
    branches: [master]
  pull_request:
    branches: [master]

env:
  CARGO_TERM_COLOR: always

jobs:
  test:
    runs-on: ubuntu-latest

    strategy:
      matrix:
        node-version: [10.x]

    steps:
      - uses: actions/checkout@v2
      - name: Use Node.js ${{ matrix.node-version }}
        uses: actions/setup-node@v1
        with:
          node-version: ${{ matrix.node-version }}
      - uses: pnpm/action-setup@v1.2.0
        with:
          version: 5.x.x
      - uses: actions-rs/toolchain@v1
        with:
          toolchain: stable

      - name: NPM Install
        run: pnpm install

      - name: Test
        run: pnpm test

  release:
    name: Publish binaries
    needs: test
    runs-on: ubuntu-latest

    strategy:
      matrix:
        node-version: [10.x]

    steps:
      - uses: actions/checkout@v2
      - name: Use Node.js ${{ matrix.node-version }}
        uses: actions/setup-node@v1
        with:
          node-version: ${{ matrix.node-version }}
      - uses: pnpm/action-setup@v1.2.0
        with:
          version: 5.x.x
      - uses: actions-rs/toolchain@v1
        with:
          toolchain: stable

      - name: NPM Install
        run: pnpm install

      - name: Publish binaries if commit is a release
        env:
          NODE_PRE_GYP_GITHUB_TOKEN: ${{ secrets.NODE_PRE_GYP_GITHUB_TOKEN }}
        run: |
          COMMIT_MESSAGE=$(git log --format=%B --no-merges -n 1 | tr -d '\n')
          if [[ ${COMMIT_MESSAGE} =~ ^release.* ]]; then
            pnpm run build
            pnpm run minify
            pnpm run package
            pnpm run upload-binary
          fi
